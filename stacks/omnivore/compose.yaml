x-postgres:
  &postgres-common
  image: "ankane/pgvector:v0.5.1"
  user: postgres
  healthcheck:
    test: "exit 0"
    interval: 2s
    timeout: 12s
    retries: 3

services:
  postgres:
    <<: *postgres-common
    container_name: "omnivore-postgres"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    restart: unless-stopped
  
  traefik:
    image: traefik:v3.2
    container_name: traefik
    command:
    - "--log.level=ERROR"
    - "--api.insecure=true"
    - "--providers.docker=true"
    - "--providers.docker.exposedbydefault=false"
    - "--entryPoints.web.address=:80"
    - "--entryPoints.websecure.address=:443"
    - "--entrypoints.websecure.http.tls=true"
    # - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
    # - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    - "--certificatesresolvers.based.acme.email=bulynin.misha@gmail.com"
    - "--certificatesresolvers.based.acme.storage=/letsencrypt/acme.json"
    - "--certificatesresolvers.based.acme.dnsChallenge.provider=cloudflare"
    - "--metrics.prometheus=true"
    - "--accesslog=true"
    - "--accesslog.addinternals"
    env_file:
      - traefik.env
    ports:
    - "80:80"
    - "443:443"
    - "8088:8080"
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
    - "./letsencrypt:/letsencrypt"
    restart: unless-stopped
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.traefik.entrypoints=websecure"
    - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  api:
    image: ghcr.io/m1xxos/omnivore-api:sha-cd4078d
    container_name: "omnivore-api"
    ports:
      - "4000:8080"
    healthcheck:
      test: ["CMD-SHELL", "nc -z 0.0.0.0 8080 || exit 1"]
      interval: 15s
      timeout: 90s
      retries: 6
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.omnivore-backend.entrypoints=websecure,web"
      - "traefik.http.services.omnivore-backend.loadbalancer.server.port=8080"
      - "traefik.http.routers.omnivore-backend.rule=Host(`omnivore.m1xxos.me`) && PathPrefix(`/api`)"
      - "traefik.http.routers.omnivore-backend.service=omnivore-backend"

  queue-processor:
    image: ghcr.io/m1xxos/omnivore-queue-processor:sha-603b5d3
    container_name: "omnivore-queue-processor"
    env_file:
      - .env
    depends_on:
      api:
        condition: service_started
    restart: unless-stopped

  web:
    image: ghcr.io/m1xxos/omnivore-web:sha-4d3302c
    container_name: "omnivore-web"
    # ports:
    #   - "3000:8080"
    expose:
      - 8080
    env_file:
      - .env
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.omnivore-web.tls.certresolver=based"
      - "traefik.http.routers.omnivore-web.entrypoints=websecure,web"
      - "traefik.http.services.omnivore-web.loadbalancer.server.port=8080"
      - "traefik.http.routers.omnivore-web.rule=Host(`omnivore.m1xxos.me`) && PathPrefix(`/api/client/auth`) || PathPrefix(`/api/save`)"
      - "traefik.http.routers.omnivore-web.service=omnivore-web"
      - "traefik.http.routers.omnivore-web-root.entrypoints=websecure,web"
      - "traefik.http.routers.omnivore-web-root.rule=Host(`omnivore.m1xxos.me`) && PathPrefix(`/`)"
      - "traefik.http.routers.omnivore-web-root.service=omnivore-web"

  image-proxy:
    image: ghcr.io/m1xxos/omnivore-image-proxy:sha-3cf79c6
    container_name: "omnivore-image-proxy"
    ports:
      - "7070:8080"
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.omnivore-imageproxy.entrypoints=websecure,web"
      - "traefik.http.services.omnivore-imageproxy.loadbalancer.server.port=8080"
      - "traefik.http.routers.omnivore-imageproxy.rule=Host(`omnivore.m1xxos.me`) && PathPrefix(`/images`)"
      - "traefik.http.middlewares.omnivore-imageproxy-rewrite.replacepathregex.regex=^/images/(.*)"
      - "traefik.http.middlewares.omnivore-imageproxy-rewrite.replacepathregex.replacement=/$1"
      - "traefik.http.routers.omnivore-imageproxy.middlewares=omnivore-imageproxy-rewrite"

  content-fetch:
    image: ghcr.io/m1xxos/omnivore-content-fetch:sha-7afc183
    container_name: "omnivore-content-fetch"
    ports:
      - "9090:8080"
    environment:
      - USE_FIREFOX=true # Using Firefox here because the official chrome version seems to freeze a lot in Docker.
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      api:
        condition: service_healthy
    restart: unless-stopped

  redis:
    image: "redis:7.2.4"
    container_name: "omnivore-redis"
    expose:
      - 6379
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    volumes:
      - redis_data:/data
    restart: unless-stopped

  minio:
    image: minio/minio
    expose:
      - 1010
    ports:
      - "1010:9000"
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 1s
    environment:
      - "MINIO_ACCESS_KEY=minio"
      - "MINIO_SECRET_KEY=miniominio"
      - "AWS_S3_ENDPOINT_URL=http://minio:1010"
    command: server /data
    volumes:
      - minio_data:/data
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.omnivore-bucket.entrypoints=websecure,web"
      - "traefik.http.services.omnivore-bucket.loadbalancer.server.port=9000"
      - "traefik.http.routers.omnivore-bucket.rule=Host(`omnivore.m1xxos.me`) && PathPrefix(`/bucket`)"
      - "traefik.http.routers.omnivore-bucket.service=omnivore-bucket"

  mail-watch-server:
    image: ghcr.io/m1xxos/omnivore-mail-watch-server:sha-0a759f5
    container_name: "omnivore-mail-watch-server"
    ports:
      - "4398:8080"
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.omnivore-mail.entrypoints=websecure,web"
      - "traefik.http.services.omnivore-mail.loadbalancer.server.port=8080"
      - "traefik.http.routers.omnivore-mail.rule=Host(`omnivore.m1xxos.me`) && PathPrefix(`/mail`)"
      - "traefik.http.routers.omnivore-mail.service=omnivore-mail"

volumes:
  pgdata:
  redis_data:
  minio_data:

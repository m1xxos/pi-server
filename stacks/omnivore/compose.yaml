x-postgres:
  &postgres-common
  image: "ankane/pgvector:v0.5.1"
  user: postgres
  healthcheck:
    test: "exit 0"
    interval: 2s
    timeout: 12s
    retries: 3

x-common:
  &common
  networks:
    - traefik_proxy
  env_file:
    - .env
  restart: unless-stopped

services:
  postgres:
    <<: *postgres-common
    container_name: "omnivore-postgres"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - traefik_proxy

  api:
    <<: *common
    image: ghcr.io/omnivore-app/sh-backend:latest
    container_name: "omnivore-api"
    ports:
      - "4000:8080"
    healthcheck:
      test: ["CMD-SHELL", "nc -z 0.0.0.0 8080 || exit 1"]
      interval: 15s
      timeout: 90s
      retries: 6
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.omnivore-backend.entrypoints=websecure,web"
      - "traefik.http.services.omnivore-backend.loadbalancer.server.port=8080"
      - "traefik.http.routers.omnivore-backend.rule=Host(`omnivore.m1xxos.tech`) && PathPrefix(`/api`)"
      - "traefik.http.routers.omnivore-backend.service=omnivore-backend"

  queue-processor:
    <<: *common
    image: ghcr.io/omnivore-app/sh-queue-processor:latest
    container_name: "omnivore-queue-processor"
    depends_on:
      api:
        condition: service_started

  web:
    <<: *common
    image: ghcr.io/omnivore-app/sh-web:latest
    container_name: "omnivore-web"
    expose:
      - 8080
    depends_on:
      api:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.omnivore-web.tls.certresolver=based"
      - "traefik.http.routers.omnivore-web.entrypoints=websecure,web"
      - "traefik.http.services.omnivore-web.loadbalancer.server.port=8080"
      - "traefik.http.routers.omnivore-web.rule=Host(`omnivore.m1xxos.tech`) && PathPrefix(`/api/client/auth`) || PathPrefix(`/api/save`)"
      - "traefik.http.routers.omnivore-web.service=omnivore-web"
      - "traefik.http.routers.omnivore-web-root.entrypoints=websecure,web"
      - "traefik.http.routers.omnivore-web-root.rule=Host(`omnivore.m1xxos.tech`) && PathPrefix(`/`)"
      - "traefik.http.routers.omnivore-web-root.service=omnivore-web"

  image-proxy:
    <<: *common
    image: ghcr.io/omnivore-app/sh-image-proxy:latest
    container_name: "omnivore-image-proxy"
    ports:
      - "7070:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.omnivore-imageproxy.entrypoints=websecure,web"
      - "traefik.http.services.omnivore-imageproxy.loadbalancer.server.port=8080"
      - "traefik.http.routers.omnivore-imageproxy.rule=Host(`omnivore.m1xxos.tech`) && PathPrefix(`/images`)"
      - "traefik.http.middlewares.omnivore-imageproxy-rewrite.replacepathregex.regex=^/images/(.*)"
      - "traefik.http.middlewares.omnivore-imageproxy-rewrite.replacepathregex.replacement=/$1"
      - "traefik.http.routers.omnivore-imageproxy.middlewares=omnivore-imageproxy-rewrite"

  content-fetch:
    <<: *common
    image: ghcr.io/omnivore-app/sh-content-fetch:latest
    container_name: "omnivore-content-fetch"
    ports:
      - "9090:8080"
    environment:
      - USE_FIREFOX=true # Using Firefox here because the official chrome version seems to freeze a lot in Docker.
    depends_on:
      redis:
        condition: service_healthy
      api:
        condition: service_healthy

  redis:
    image: "redis:7.2.4"
    container_name: "omnivore-redis"
    expose:
      - 6379
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - traefik_proxy

  minio:
    image: minio/minio
    expose:
      - 1010
    ports:
      - "1010:9000"
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 1s
    environment:
      - "MINIO_ACCESS_KEY=minio"
      - "MINIO_SECRET_KEY=miniominio"
      - "AWS_S3_ENDPOINT_URL=http://minio:1010"
    command: server /data
    volumes:
      - minio_data:/data
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.omnivore-bucket.entrypoints=websecure,web"
      - "traefik.http.services.omnivore-bucket.loadbalancer.server.port=9000"
      - "traefik.http.routers.omnivore-bucket.rule=Host(`omnivore.m1xxos.tech`) && PathPrefix(`/bucket`)"
      - "traefik.http.routers.omnivore-bucket.service=omnivore-bucket"

  mail-watch-server:
    <<: *common
    image: ghcr.io/omnivore-app/sh-local-mail-watcher:latest
    container_name: "omnivore-mail-watch-server"
    ports:
      - "4398:8080"
    depends_on:
      redis:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.omnivore-mail.entrypoints=websecure,web"
      - "traefik.http.services.omnivore-mail.loadbalancer.server.port=8080"
      - "traefik.http.routers.omnivore-mail.rule=Host(`omnivore.m1xxos.tech`) && PathPrefix(`/mail`)"
      - "traefik.http.routers.omnivore-mail.service=omnivore-mail"

volumes:
  pgdata:
  redis_data:
  minio_data:

networks:
  traefik_proxy:
    external: true
  omnivore: